-A[print each packet in ASCII]
-c[exit after receiving specified number of packets]
-C[specify output file size in MB (10e6 bytes)]
-d[dump the compiled packet-matching code in a human readable form]
-D[print the list of the network interfaces available on the system]
-e[print the link-level header on each dump line]
-E[decrypting IPsec ESP packets]
-f[print 'foreign' IPv4 addresses numerically]
-F[input file for the filter expression]
-i[interface]
-l[make stdout line buffered]
-L[list the known data link types for the interface]
-m[load SMI MIB module definitions]
-M[shared secret for validating the digests in TCP segments with the TCP-MD5 option]
-n[don't convert addresses to names]
-N[don't print domain name qualification of host names]
-O[don't run the packet-matching code optimizer]
-p[don't put the interface into promiscuous mode]
-q[quick (quiet?) output]
-R[assume ESP/AH packets to be based on old specification (RFC1825 to RFC1829)]
-r[read packets from file]
-S[print absolute TCP sequence numbers]
-s[specify number of bytes of data to snarf from each packet]
-T[interpret captured packets as specified type]
-t[don't print a timestamp on each dump line]
-u[print undecoded NFS handles]
-U[make output packet-buffered when saving to file (-w)]
-v[slightly more verbose output]
-w[write the raw packets to file]
-W[limit the number of created files (-C)]
-x[print each packet (minus its link level header) in hex]
-X[print each packet (minus its link level header) in hex and ASCII]
-y[set the data link type to use while capturing packets]
-Z[drops privileges (if root) and changes user ID (along with primary group)]
